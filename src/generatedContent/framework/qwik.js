// File generated from "node scripts/generateContent.js", DO NOT EDIT/COMMIT
export default [
  {
    frameworkId: "qwik",
    snippetId: "declare-state",
    files: [
      {
        fileName: "Name.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useSignal</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> Name</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> name</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useSignal</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"John"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>Hello </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">name</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/1-reactivity/1-declare-state/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "update-state",
    files: [
      {
        fileName: "Name.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useTask$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useSignal</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> Name</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> name</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useSignal</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"John"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  useTask$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E5C07B">    name</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> "Jane"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>Hello </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">name</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/1-reactivity/2-update-state/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "computed-state",
    files: [
      {
        fileName: "DoubleCount.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useSignal</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useComputed$</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> DoubleCount</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> count</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useSignal</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">10</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> doubleCount</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useComputed$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#E5C07B"> count</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#56B6C2"> *</span><span style="color:#D19A66"> 2</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">{</span><span style="color:#E5C07B">doubleCount</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/1-reactivity/3-computed-state/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "minimal-template",
    files: [
      {
        fileName: "HelloWorld.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#61AFEF"> HelloWorld</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">>Hello World&#x3C;/</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">};</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/1-minimal-template/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "styling",
    files: [
      {
        fileName: "CssStyle.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useStyles$</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> App</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">  useStyles$</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">    .title {</span></span>\n<span class="line"><span style="color:#98C379">      color: red;</span></span>\n<span class="line"><span style="color:#98C379">    }</span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">h1</span><span style="color:#D19A66;font-style:italic"> class</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"title"</span><span style="color:#ABB2BF">>I am red&#x3C;/</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">button</span><span style="color:#D19A66;font-style:italic"> style</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">{ </span><span style="color:#98C379">"font-size"</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"10rem"</span><span style="color:#ABB2BF"> }</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">>I am a button&#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/2-styling/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "loop",
    files: [
      {
        fileName: "Colors.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> Colors</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> colors</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"blue"</span><span style="color:#ABB2BF">];</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">ul</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#C678DD">      {</span><span style="color:#E5C07B">colors</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">map</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">color</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E06C75">li</span><span style="color:#D19A66;font-style:italic"> key</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">color</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">{</span><span style="color:#E06C75">color</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">li</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      ))</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/</span><span style="color:#E06C75">ul</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/3-loop/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "event-click",
    files: [
      {
        fileName: "Counter.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useSignal</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">$</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> Counter</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> count</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useSignal</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">0</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> incrementCount</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> $</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E5C07B">    count</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#56B6C2">++</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Counter: </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">count</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">button</span><span style="color:#D19A66;font-style:italic"> onClick$</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">incrementCount</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">>Increment&#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/4-event-click/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "dom-ref",
    files: [
      {
        fileName: "InputFocused.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useVisibleTask$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useSignal</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> InputFocused</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> inputElement</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useSignal</span><span style="color:#ABB2BF">&#x3C;</span><span style="color:#E5C07B">HTMLInputElement</span><span style="color:#ABB2BF">>();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  useVisibleTask$</span><span style="color:#ABB2BF">(({ </span><span style="color:#E06C75;font-style:italic">track</span><span style="color:#ABB2BF"> }) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> el</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> track</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">inputElement</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#E5C07B">    el</span><span style="color:#ABB2BF">?.</span><span style="color:#61AFEF">focus</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">input</span><span style="color:#D19A66;font-style:italic"> type</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"text"</span><span style="color:#D19A66;font-style:italic"> ref</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">inputElement</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF"> />;</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/5-dom-ref/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "conditional",
    files: [
      {
        fileName: "TrafficLight.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useComputed$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useSignal</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> TRAFFIC_LIGHTS</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"orange"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> TrafficLight</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> lightIndex</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useSignal</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">0</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> light</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useComputed$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#E5C07B"> TRAFFIC_LIGHTS</span><span style="color:#ABB2BF">[</span><span style="color:#E5C07B">lightIndex</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#ABB2BF">]);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> nextLight</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> $</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E5C07B">    lightIndex</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> (</span><span style="color:#E5C07B">lightIndex</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#56B6C2"> +</span><span style="color:#D19A66"> 1</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">%</span><span style="color:#E5C07B"> TRAFFIC_LIGHTS</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">length</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">button</span><span style="color:#D19A66;font-style:italic"> onClick$</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">nextLight</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">>Next light&#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Light is: </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">light</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">        You must </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">light</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#56B6C2"> ===</span><span style="color:#98C379"> "red"</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">>STOP&#x3C;/</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#C678DD">        {</span><span style="color:#E5C07B">light</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#56B6C2"> ===</span><span style="color:#98C379"> "orange"</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">>SLOW DOWN&#x3C;/</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#C678DD">        {</span><span style="color:#E5C07B">light</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#56B6C2"> ===</span><span style="color:#98C379"> "green"</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">>GO&#x3C;/</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/6-conditional/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "on-mount",
    files: [
      {
        fileName: "PageTitle.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useVisibleTask$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useStore</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> App</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> store</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useStore</span><span style="color:#ABB2BF">({</span></span>\n<span class="line"><span style="color:#E06C75">    pageTitle</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">""</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  useVisibleTask$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E5C07B">    store</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">pageTitle</span><span style="color:#56B6C2"> =</span><span style="color:#E5C07B"> document</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">title</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Page title: </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">store</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">pageTitle</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/3-lifecycle/1-on-mount/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "on-unmount",
    files: [
      {
        fileName: "Time.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useVisibleTask$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useStore</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> App</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> store</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useStore</span><span style="color:#ABB2BF">({</span></span>\n<span class="line"><span style="color:#E06C75">    time</span><span style="color:#ABB2BF">: </span><span style="color:#C678DD">new</span><span style="color:#61AFEF"> Date</span><span style="color:#ABB2BF">().</span><span style="color:#61AFEF">toLocaleTimeString</span><span style="color:#ABB2BF">(),</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  useVisibleTask$</span><span style="color:#ABB2BF">(({ </span><span style="color:#E06C75;font-style:italic">cleanup</span><span style="color:#ABB2BF"> }) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> timer</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> setInterval</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E5C07B">      store</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">time</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> new</span><span style="color:#61AFEF"> Date</span><span style="color:#ABB2BF">().</span><span style="color:#61AFEF">toLocaleTimeString</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#ABB2BF">    }, </span><span style="color:#D19A66">1000</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">    cleanup</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> clearInterval</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">timer</span><span style="color:#ABB2BF">));</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Current time: </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">store</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">time</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/3-lifecycle/2-on-unmount/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "props",
    files: [
      {
        fileName: "App.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> UserProfile</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./UserProfile"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> App</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E5C07B">UserProfile</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      name</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"John"</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      age</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#D19A66">20</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      favouriteColors</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">[</span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"blue"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">]</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      isAvailable</span></span>\n<span class="line"><span style="color:#ABB2BF">    /></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#E06C75"> App</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "UserProfile.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">type</span><span style="color:#E5C07B"> Props</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">  name</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">string</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#E06C75">  age</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">number</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#E06C75">  favouriteColors</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">string</span><span style="color:#ABB2BF">[];</span></span>\n<span class="line"><span style="color:#E06C75">  isAvailable</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">boolean</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">};</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> UserProfile</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">props</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">Props</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E5C07B">    name</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> ""</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E5C07B">    age</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> null</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E5C07B">    favouriteColors</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [],</span></span>\n<span class="line"><span style="color:#E5C07B">    isAvailable</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> false</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">  } </span><span style="color:#56B6C2">=</span><span style="color:#E06C75"> props</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>My name is </span><span style="color:#C678DD">{</span><span style="color:#E06C75">name</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">!&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>My age is </span><span style="color:#C678DD">{</span><span style="color:#E06C75">age</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">!&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>My favourite colors are </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">favouriteColors</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">join</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">", "</span><span style="color:#ABB2BF">)</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">!&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>I am </span><span style="color:#C678DD">{</span><span style="color:#E06C75">isAvailable</span><span style="color:#C678DD"> ?</span><span style="color:#98C379"> "available"</span><span style="color:#C678DD"> :</span><span style="color:#98C379"> "not available"</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#E06C75"> UserProfile</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/1-props/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "emit-to-parent",
    files: [
      {
        fileName: "App.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useStore</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> AnswerButton</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./AnswerButton"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> App</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> store</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useStore</span><span style="color:#ABB2BF">({</span></span>\n<span class="line"><span style="color:#E06C75">    isHappy</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">true</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> onAnswerNo</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> $</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E5C07B">    store</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isHappy</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> false</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> onAnswerYes</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> $</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E5C07B">    store</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isHappy</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> true</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Are you happy?&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E5C07B">AnswerButton</span><span style="color:#D19A66;font-style:italic"> onYes$</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">onAnswerYes</span><span style="color:#C678DD">}</span><span style="color:#D19A66;font-style:italic"> onNo$</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">onAnswerNo</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#D19A66;font-style:italic"> style</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">{ </span><span style="color:#E06C75">fontSize</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">50</span><span style="color:#ABB2BF"> }</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">{</span><span style="color:#E5C07B">store</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isHappy</span><span style="color:#C678DD"> ?</span><span style="color:#98C379"> "ðŸ˜€"</span><span style="color:#C678DD"> :</span><span style="color:#98C379"> "ðŸ˜¥"</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#E06C75"> App</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "AnswerButton.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">PropFunction</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">type</span><span style="color:#E5C07B"> Props</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">  onYes$</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">PropFunction</span><span style="color:#ABB2BF">&#x3C;() </span><span style="color:#C678DD">=></span><span style="color:#E5C07B"> void</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#E06C75">  onNo$</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">PropFunction</span><span style="color:#ABB2BF">&#x3C;() </span><span style="color:#C678DD">=></span><span style="color:#E5C07B"> void</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">};</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> AnswerButton</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">props</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">Props</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">button</span><span style="color:#D19A66;font-style:italic"> onClick$</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">props</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">onYes$</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">>YES&#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">button</span><span style="color:#D19A66;font-style:italic"> onClick$</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">props</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">onNo$</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">>NO&#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#E06C75"> AnswerButton</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/2-emit-to-parent/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "slot",
    files: [
      {
        fileName: "App.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> FunnyButton</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./FunnyButton"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E5C07B">FunnyButton</span><span style="color:#ABB2BF">>Click me!&#x3C;/</span><span style="color:#E5C07B">FunnyButton</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "FunnyButton.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">Slot</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> FunnyButton</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">button</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      style</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">{</span></span>\n<span class="line"><span style="color:#E06C75">        background</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"rgba(0, 0, 0, 0.4)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        color</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"#fff"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        padding</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"10px 20px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        fontSize</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"30px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        border</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"2px solid #fff"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        margin</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"8px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        transform</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"scale(0.9)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        boxShadow</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"4px 4px rgba(0, 0, 0, 0.4)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        transition</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"transform 0.2s cubic-bezier(0.34, 1.65, 0.88, 0.925) 0s"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        outline</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"0"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">      }</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">    ></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E5C07B">Slot</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#E06C75"> FunnyButton</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/3-slot/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "slot-fallback",
    files: [
      {
        fileName: "App.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> FunnyButton</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./FunnyButton"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E5C07B">FunnyButton</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E5C07B">FunnyButton</span><span style="color:#ABB2BF">>Click me!&#x3C;/</span><span style="color:#E5C07B">FunnyButton</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "FunnyButton.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">Slot</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useStylesScoped$</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#7F848E;font-style:italic">/**</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic"> * Fallback content as described in the docs is not working</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic"> * with no immediate plans on adding support again.</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic"> * https://github.com/BuilderIO/qwik/issues/1106</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic"> *</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic"> * The recommended workaround is something like this, using CSS</span></span>\n<span class="line"><span style="color:#7F848E;font-style:italic"> */</span></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> FunnyButton</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">  useStylesScoped$</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      button {</span></span>\n<span class="line"><span style="color:#98C379">        background: rgba(0, 0, 0, 0.4);</span></span>\n<span class="line"><span style="color:#98C379">        color: #fff;</span></span>\n<span class="line"><span style="color:#98C379">        padding: 10px 20px;</span></span>\n<span class="line"><span style="color:#98C379">        font-size: 30px;</span></span>\n<span class="line"><span style="color:#98C379">        border: 2px solid #fff;</span></span>\n<span class="line"><span style="color:#98C379">        margin: 8px;</span></span>\n<span class="line"><span style="color:#98C379">        transform: scale(0.9);</span></span>\n<span class="line"><span style="color:#98C379">        box-shadow: 4px 4px rgba(0, 0, 0, 0.4);</span></span>\n<span class="line"><span style="color:#98C379">        transition: transform 0.2s cubic-bezier(0.34, 1.65, 0.88, 0.925) 0s;</span></span>\n<span class="line"><span style="color:#98C379">        outline: 0;</span></span>\n<span class="line"><span style="color:#98C379">      }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#98C379">      .slot:not(:empty) + .fallback {</span></span>\n<span class="line"><span style="color:#98C379">        display: none;</span></span>\n<span class="line"><span style="color:#98C379">      }</span></span>\n<span class="line"><span style="color:#98C379">  `</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">span</span><span style="color:#D19A66;font-style:italic"> class</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"slot"</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E5C07B">Slot</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;/</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">span</span><span style="color:#D19A66;font-style:italic"> class</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"fallback"</span><span style="color:#ABB2BF">>No content found&#x3C;/</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#E06C75"> FunnyButton</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/4-slot-fallback/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "context",
    files: [
      {
        fileName: "App.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">  component$</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">  useStore</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">  useContextProvider</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">  createContext</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">  $</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">} </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> UserProfile</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./UserProfile"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> UserContext</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> createContext</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"user-context"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> App</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> user</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useStore</span><span style="color:#ABB2BF">({</span></span>\n<span class="line"><span style="color:#E06C75">    id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">1</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">    username</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"unicorn42"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">    email</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"unicorn42@example.com"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> updateUsername</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> $</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">newUsername</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E5C07B">    user</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">username</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> newUsername</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  useContextProvider</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">UserContext</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">user</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">updateUsername</span><span style="color:#ABB2BF"> });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>Welcome back, </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">username</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E5C07B">UserProfile</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#E06C75"> App</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "UserProfile.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useContext</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">UserContext</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "./App"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> UserProfile</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> { </span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">updateUsername</span><span style="color:#ABB2BF"> } </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useContext</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">UserContext</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">h2</span><span style="color:#ABB2BF">>My Profile&#x3C;/</span><span style="color:#E06C75">h2</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Username: </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">username</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Email: </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">email</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">button</span><span style="color:#D19A66;font-style:italic"> onClick$</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">() </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> updateUsername</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"Jane"</span><span style="color:#ABB2BF">)</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">        Update username to Jane</span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#E06C75"> UserProfile</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/5-context/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "input-text",
    files: [
      {
        fileName: "InputHello.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useSignal</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> InputHello</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> text</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useSignal</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">""</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">{</span><span style="color:#E5C07B">text</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">input</span><span style="color:#D19A66"> bind</span><span style="color:#ABB2BF">:</span><span style="color:#D19A66;font-style:italic">value</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">text</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#E06C75"> InputHello</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/1-input-text/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "checkbox",
    files: [
      {
        fileName: "IsAvailable.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useSignal</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> IsAvailable</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> isAvailable</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useSignal</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">false</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">input</span><span style="color:#D19A66;font-style:italic"> id</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"is-available"</span><span style="color:#D19A66;font-style:italic"> type</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"checkbox"</span><span style="color:#D19A66"> bind</span><span style="color:#ABB2BF">:</span><span style="color:#D19A66;font-style:italic">checked</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">isAvailable</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">label</span><span style="color:#D19A66;font-style:italic"> for</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"is-available"</span><span style="color:#ABB2BF">>Is available&#x3C;/</span><span style="color:#E06C75">label</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#E06C75"> IsAvailable</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/2-checkbox/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "radio",
    files: [
      {
        fileName: "PickPill.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useSignal</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> PickPill</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> pickedColor</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useSignal</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">>Picked: </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">pickedColor</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">input</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        id</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"blue-pill"</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        type</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"radio"</span></span>\n<span class="line"><span style="color:#D19A66">        bind</span><span style="color:#ABB2BF">:</span><span style="color:#D19A66;font-style:italic">value</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">pickedColor</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        checked</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">pickedColor</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#56B6C2"> ===</span><span style="color:#98C379"> "blue"</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        value</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"blue"</span></span>\n<span class="line"><span style="color:#ABB2BF">      /></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">label</span><span style="color:#D19A66;font-style:italic"> for</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"blue-pill"</span><span style="color:#ABB2BF">>Blue pill&#x3C;/</span><span style="color:#E06C75">label</span><span style="color:#ABB2BF">></span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">input</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        id</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"red-pill"</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        type</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"radio"</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        checked</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">pickedColor</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#56B6C2"> ===</span><span style="color:#98C379"> "red"</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66">        bind</span><span style="color:#ABB2BF">:</span><span style="color:#D19A66;font-style:italic">value</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">pickedColor</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        value</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"red"</span></span>\n<span class="line"><span style="color:#ABB2BF">      /></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">label</span><span style="color:#D19A66;font-style:italic"> for</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"red-pill"</span><span style="color:#ABB2BF">>Red pill&#x3C;/</span><span style="color:#E06C75">label</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#E06C75"> PickPill</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/3-radio/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "select",
    files: [
      {
        fileName: "ColorSelect.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useSignal</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> colors</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span></span>\n<span class="line"><span style="color:#ABB2BF">  { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">1</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">  { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">2</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"blue"</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">  { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">3</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">  { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">4</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"gray"</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">isDisabled</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">true</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> ColorSelect</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> selectedColorId</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useSignal</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"2"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">select</span><span style="color:#D19A66"> bind</span><span style="color:#ABB2BF">:</span><span style="color:#D19A66;font-style:italic">value</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">selectedColorId</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#C678DD">      {</span><span style="color:#E5C07B">colors</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">map</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">color</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E06C75">option</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">          key</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">id</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">          value</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">id</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">          disabled</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isDisabled</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">          selected</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#98C379">`</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">id</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#56B6C2"> ===</span><span style="color:#E5C07B"> selectedColorId</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">        ></span></span>\n<span class="line"><span style="color:#C678DD">          {</span><span style="color:#E5C07B">color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">text</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">        &#x3C;/</span><span style="color:#E06C75">option</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      ))</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/</span><span style="color:#E06C75">select</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#E06C75"> ColorSelect</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/4-select/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "render-app",
    files: [
      {
        fileName: "index.html",
        ext: "html",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF">&#x3C;!</span><span style="color:#E06C75">doctype</span><span style="color:#D19A66"> html</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">&#x3C;</span><span style="color:#E06C75">html</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  &#x3C;</span><span style="color:#E06C75">body</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">div</span><span style="color:#D19A66"> id</span><span style="color:#ABB2BF">=</span><span style="color:#98C379">"app"</span><span style="color:#ABB2BF">>&#x3C;/</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">script</span><span style="color:#D19A66"> type</span><span style="color:#ABB2BF">=</span><span style="color:#98C379">"module"</span><span style="color:#D19A66"> src</span><span style="color:#ABB2BF">=</span><span style="color:#98C379">"./main.tsx"</span><span style="color:#ABB2BF">>&#x3C;/</span><span style="color:#E06C75">script</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  &#x3C;/</span><span style="color:#E06C75">body</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">html</span><span style="color:#ABB2BF">></span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "main.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#98C379"> "@builder.io/qwik/qwikloader.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">render</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">App</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "./app.tsx"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">render</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">document</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">getElementById</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"app"</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">as</span><span style="color:#E5C07B"> HTMLElement</span><span style="color:#ABB2BF">, &#x3C;</span><span style="color:#E5C07B">App</span><span style="color:#ABB2BF"> />);</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "app.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useSignal</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> App</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>Hello world&#x3C;/</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/7-webapp-features/1-render-app/qwik",
  },
  {
    frameworkId: "qwik",
    snippetId: "fetch-data",
    files: [
      {
        fileName: "App.tsx",
        ext: "tsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">component$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useResource$</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">Resource</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@builder.io/qwik"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">type</span><span style="color:#E5C07B"> UsersResponse</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">  results</span><span style="color:#ABB2BF">: {</span></span>\n<span class="line"><span style="color:#E06C75">    picture</span><span style="color:#ABB2BF">: {</span></span>\n<span class="line"><span style="color:#E06C75">      thumbnail</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">string</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">    };</span></span>\n<span class="line"><span style="color:#E06C75">    name</span><span style="color:#ABB2BF">: {</span></span>\n<span class="line"><span style="color:#E06C75">      first</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">string</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#E06C75">      last</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">string</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">    };</span></span>\n<span class="line"><span style="color:#ABB2BF">  }[];</span></span>\n<span class="line"><span style="color:#ABB2BF">};</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> async</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> fetchUsers</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span><span style="color:#C678DD">await</span><span style="color:#61AFEF"> fetch</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"https://randomuser.me/api/?results=3"</span><span style="color:#ABB2BF">)).</span><span style="color:#61AFEF">json</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> App</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> component$</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> data</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useResource$</span><span style="color:#ABB2BF">&#x3C;</span><span style="color:#E5C07B">UsersResponse</span><span style="color:#ABB2BF">>(</span><span style="color:#E06C75">fetchUsers</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E5C07B">Resource</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      value</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">data</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      onPending</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Fetching users...&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      onRejected</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>An error occurred while fetching users&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      onResolved</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75">results</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75;font-style:italic">users</span><span style="color:#ABB2BF"> }) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E06C75">ul</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#C678DD">          {</span><span style="color:#E5C07B">users</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">map</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">user</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">            &#x3C;</span><span style="color:#E06C75">li</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">              &#x3C;</span><span style="color:#E06C75">img</span><span style="color:#D19A66;font-style:italic"> src</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">picture</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">thumbnail</span><span style="color:#C678DD">}</span><span style="color:#D19A66;font-style:italic"> alt</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"user"</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">              &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#C678DD">                {</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">name</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">first</span><span style="color:#C678DD">}</span><span style="color:#C678DD"> {</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">name</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">last</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">              &#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">            &#x3C;/</span><span style="color:#E06C75">li</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">          ))</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">        &#x3C;/</span><span style="color:#E06C75">ul</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      )</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">    /></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/7-webapp-features/2-fetch-data/qwik",
  },
];
