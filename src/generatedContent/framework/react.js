// File generated from "node scripts/generateContent.js", DO NOT EDIT/COMMIT
export default [
  {
    frameworkId: "react",
    snippetId: "declare-state",
    files: [
      {
        fileName: "Name.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> Name</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">name</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"John"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>Hello </span><span style="color:#C678DD">{</span><span style="color:#E06C75">name</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/1-reactivity/1-declare-state/react",
  },
  {
    frameworkId: "react",
    snippetId: "update-state",
    files: [
      {
        fileName: "Name.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useEffect</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> Name</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">name</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setName</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"John"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  useEffect</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    setName</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"Jane"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }, []);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>Hello </span><span style="color:#C678DD">{</span><span style="color:#E06C75">name</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/1-reactivity/2-update-state/react",
  },
  {
    frameworkId: "react",
    snippetId: "computed-state",
    files: [
      {
        fileName: "DoubleCount.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> DoubleCount</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">count</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">10</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> doubleCount</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> count</span><span style="color:#56B6C2"> *</span><span style="color:#D19A66"> 2</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">{</span><span style="color:#E06C75">doubleCount</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/1-reactivity/3-computed-state/react",
  },
  {
    frameworkId: "react",
    snippetId: "minimal-template",
    files: [
      {
        fileName: "HelloWorld.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> HelloWorld</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>Hello world&#x3C;/</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/1-minimal-template/react",
  },
  {
    frameworkId: "react",
    snippetId: "styling",
    files: [
      {
        fileName: "CssStyle.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#98C379"> "./style.css"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> CssStyle</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">h1</span><span style="color:#D19A66;font-style:italic"> className</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"title"</span><span style="color:#ABB2BF">>I am red&#x3C;/</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">button</span><span style="color:#D19A66;font-style:italic"> style</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">{ </span><span style="color:#E06C75">fontSize</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"10rem"</span><span style="color:#ABB2BF"> }</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">>I am a button&#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "style.css",
        ext: "css",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66">.title</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  color: </span><span style="color:#D19A66">red</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/2-styling/react",
  },
  {
    frameworkId: "react",
    snippetId: "loop",
    files: [
      {
        fileName: "Colors.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> Colors</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> colors</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"blue"</span><span style="color:#ABB2BF">];</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">ul</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#C678DD">      {</span><span style="color:#E5C07B">colors</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">map</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">color</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E06C75">li</span><span style="color:#D19A66;font-style:italic"> key</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">color</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">{</span><span style="color:#E06C75">color</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">li</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      ))</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/</span><span style="color:#E06C75">ul</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/3-loop/react",
  },
  {
    frameworkId: "react",
    snippetId: "event-click",
    files: [
      {
        fileName: "Counter.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> Counter</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">count</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setCount</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">0</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  function</span><span style="color:#61AFEF"> incrementCount</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#61AFEF">    setCount</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">count</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#E06C75"> count</span><span style="color:#56B6C2"> +</span><span style="color:#D19A66"> 1</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Counter: </span><span style="color:#C678DD">{</span><span style="color:#E06C75">count</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">button</span><span style="color:#D19A66;font-style:italic"> onClick</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">incrementCount</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">>+1&#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/4-event-click/react",
  },
  {
    frameworkId: "react",
    snippetId: "dom-ref",
    files: [
      {
        fileName: "InputFocused.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useEffect</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useRef</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> InputFocused</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> inputElement</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> useRef</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">null</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  useEffect</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#E5C07B"> inputElement</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">current</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">focus</span><span style="color:#ABB2BF">(), []);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">input</span><span style="color:#D19A66;font-style:italic"> type</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"text"</span><span style="color:#D19A66;font-style:italic"> ref</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">inputElement</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF"> />;</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/5-dom-ref/react",
  },
  {
    frameworkId: "react",
    snippetId: "conditional",
    files: [
      {
        fileName: "TrafficLight.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> TRAFFIC_LIGHTS</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"orange"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> TrafficLight</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">lightIndex</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setLightIndex</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">0</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> light</span><span style="color:#56B6C2"> =</span><span style="color:#E5C07B"> TRAFFIC_LIGHTS</span><span style="color:#ABB2BF">[</span><span style="color:#E06C75">lightIndex</span><span style="color:#ABB2BF">];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  function</span><span style="color:#61AFEF"> nextLight</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#61AFEF">    setLightIndex</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75">lightIndex</span><span style="color:#56B6C2"> +</span><span style="color:#D19A66"> 1</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">%</span><span style="color:#E5C07B"> TRAFFIC_LIGHTS</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">length</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">button</span><span style="color:#D19A66;font-style:italic"> onClick</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">nextLight</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">>Next light&#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Light is: </span><span style="color:#C678DD">{</span><span style="color:#E06C75">light</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">        You must</span></span>\n<span class="line"><span style="color:#C678DD">        {</span><span style="color:#E06C75">light</span><span style="color:#56B6C2"> ===</span><span style="color:#98C379"> "red"</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">>STOP&#x3C;/</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#C678DD">        {</span><span style="color:#E06C75">light</span><span style="color:#56B6C2"> ===</span><span style="color:#98C379"> "orange"</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">>SLOW DOWN&#x3C;/</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#C678DD">        {</span><span style="color:#E06C75">light</span><span style="color:#56B6C2"> ===</span><span style="color:#98C379"> "green"</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">>GO&#x3C;/</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/6-conditional/react",
  },
  {
    frameworkId: "react",
    snippetId: "on-mount",
    files: [
      {
        fileName: "PageTitle.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useEffect</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> PageTitle</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">pageTitle</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setPageTitle</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">""</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  useEffect</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    setPageTitle</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">document</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">title</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }, []);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Page title: </span><span style="color:#C678DD">{</span><span style="color:#E06C75">pageTitle</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/3-lifecycle/1-on-mount/react",
  },
  {
    frameworkId: "react",
    snippetId: "on-unmount",
    files: [
      {
        fileName: "Time.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useEffect</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> Time</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">time</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setTime</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#C678DD">new</span><span style="color:#61AFEF"> Date</span><span style="color:#ABB2BF">().</span><span style="color:#61AFEF">toLocaleTimeString</span><span style="color:#ABB2BF">());</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  useEffect</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> timer</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> setInterval</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">      setTime</span><span style="color:#ABB2BF">(</span><span style="color:#C678DD">new</span><span style="color:#61AFEF"> Date</span><span style="color:#ABB2BF">().</span><span style="color:#61AFEF">toLocaleTimeString</span><span style="color:#ABB2BF">());</span></span>\n<span class="line"><span style="color:#ABB2BF">    }, </span><span style="color:#D19A66">1000</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> clearInterval</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">timer</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }, []);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Current time: </span><span style="color:#C678DD">{</span><span style="color:#E06C75">time</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/3-lifecycle/2-on-unmount/react",
  },
  {
    frameworkId: "react",
    snippetId: "props",
    files: [
      {
        fileName: "App.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> UserProfile</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./UserProfile.jsx"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E5C07B">UserProfile</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      name</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"John"</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      age</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#D19A66">20</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      favouriteColors</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">[</span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"blue"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">]</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      isAvailable</span></span>\n<span class="line"><span style="color:#ABB2BF">    /></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "UserProfile.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> PropTypes</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "prop-types"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> UserProfile</span><span style="color:#ABB2BF">({</span></span>\n<span class="line"><span style="color:#E06C75;font-style:italic">  name</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> ""</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75;font-style:italic">  age</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> null</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75;font-style:italic">  favouriteColors</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [],</span></span>\n<span class="line"><span style="color:#E06C75;font-style:italic">  isAvailable</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> false</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">}) {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>My name is </span><span style="color:#C678DD">{</span><span style="color:#E06C75">name</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">!&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>My age is </span><span style="color:#C678DD">{</span><span style="color:#E06C75">age</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">!&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>My favourite colors are </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">favouriteColors</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">join</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">", "</span><span style="color:#ABB2BF">)</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">!&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>I am </span><span style="color:#C678DD">{</span><span style="color:#E06C75">isAvailable</span><span style="color:#C678DD"> ?</span><span style="color:#98C379"> "available"</span><span style="color:#C678DD"> :</span><span style="color:#98C379"> "not available"</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E5C07B">UserProfile</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">propTypes</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">  name</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">PropTypes</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">string</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isRequired</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">  age</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">PropTypes</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">number</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isRequired</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">  favouriteColors</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">PropTypes</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">arrayOf</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">PropTypes</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">string</span><span style="color:#ABB2BF">).</span><span style="color:#E06C75">isRequired</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">  isAvailable</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">PropTypes</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">bool</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isRequired</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">};</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/1-props/react",
  },
  {
    frameworkId: "react",
    snippetId: "emit-to-parent",
    files: [
      {
        fileName: "App.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> AnswerButton</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./AnswerButton.jsx"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">isHappy</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setIsHappy</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">true</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  function</span><span style="color:#61AFEF"> onAnswerNo</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#61AFEF">    setIsHappy</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">false</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  function</span><span style="color:#61AFEF"> onAnswerYes</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#61AFEF">    setIsHappy</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">true</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Are you happy?&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E5C07B">AnswerButton</span><span style="color:#D19A66;font-style:italic"> onYes</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">onAnswerYes</span><span style="color:#C678DD">}</span><span style="color:#D19A66;font-style:italic"> onNo</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">onAnswerNo</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#D19A66;font-style:italic"> style</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">{ </span><span style="color:#E06C75">fontSize</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">50</span><span style="color:#ABB2BF"> }</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">{</span><span style="color:#E06C75">isHappy</span><span style="color:#C678DD"> ?</span><span style="color:#98C379"> "😀"</span><span style="color:#C678DD"> :</span><span style="color:#98C379"> "😥"</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "AnswerButton.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> PropTypes</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "prop-types"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> AnswerButton</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75;font-style:italic">onYes</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic">onNo</span><span style="color:#ABB2BF"> }) {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">button</span><span style="color:#D19A66;font-style:italic"> onClick</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">onYes</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">>YES&#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">button</span><span style="color:#D19A66;font-style:italic"> onClick</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">onNo</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">>NO&#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E5C07B">AnswerButton</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">propTypes</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">  onYes</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">PropTypes</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">func</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">  onNo</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">PropTypes</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">func</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">};</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/2-emit-to-parent/react",
  },
  {
    frameworkId: "react",
    snippetId: "slot",
    files: [
      {
        fileName: "App.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> FunnyButton</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./FunnyButton.jsx"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E5C07B">FunnyButton</span><span style="color:#ABB2BF">>Click me!&#x3C;/</span><span style="color:#E5C07B">FunnyButton</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "FunnyButton.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> PropTypes</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "prop-types"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> FunnyButton</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75;font-style:italic">children</span><span style="color:#ABB2BF"> }) {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">button</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      style</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">{</span></span>\n<span class="line"><span style="color:#E06C75">        background</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"rgba(0, 0, 0, 0.4)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        color</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"#fff"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        padding</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"10px 20px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        fontSize</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"30px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        border</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"2px solid #fff"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        margin</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"8px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        transform</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"scale(0.9)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        boxShadow</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"4px 4px rgba(0, 0, 0, 0.4)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        transition</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"transform 0.2s cubic-bezier(0.34, 1.65, 0.88, 0.925) 0s"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        outline</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"0"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">      }</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">    ></span></span>\n<span class="line"><span style="color:#C678DD">      {</span><span style="color:#E06C75">children</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E5C07B">FunnyButton</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">propTypes</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">  children</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">PropTypes</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">node</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">};</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/3-slot/react",
  },
  {
    frameworkId: "react",
    snippetId: "slot-fallback",
    files: [
      {
        fileName: "App.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> FunnyButton</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./FunnyButton.jsx"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E5C07B">FunnyButton</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E5C07B">FunnyButton</span><span style="color:#ABB2BF">>I got content!&#x3C;/</span><span style="color:#E5C07B">FunnyButton</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "FunnyButton.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> PropTypes</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "prop-types"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> FunnyButton</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75;font-style:italic">children</span><span style="color:#ABB2BF"> }) {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">button</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">      style</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">{</span></span>\n<span class="line"><span style="color:#E06C75">        background</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"rgba(0, 0, 0, 0.4)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        color</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"#fff"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        padding</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"10px 20px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        fontSize</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"30px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        border</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"2px solid #fff"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        margin</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"8px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        transform</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"scale(0.9)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        boxShadow</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"4px 4px rgba(0, 0, 0, 0.4)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        transition</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"transform 0.2s cubic-bezier(0.34, 1.65, 0.88, 0.925) 0s"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        outline</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"0"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">      }</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">    ></span></span>\n<span class="line"><span style="color:#C678DD">      {</span><span style="color:#E06C75">children</span><span style="color:#56B6C2"> ||</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">>No content found&#x3C;/</span><span style="color:#E06C75">span</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E5C07B">FunnyButton</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">propTypes</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">  children</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">PropTypes</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">node</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">};</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/4-slot-fallback/react",
  },
  {
    frameworkId: "react",
    snippetId: "context",
    files: [
      {
        fileName: "App.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> UserProfile</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./UserProfile"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">UserContext</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "./UserContext"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setUser</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">({</span></span>\n<span class="line"><span style="color:#E06C75">    id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">1</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">    username</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"unicorn42"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">    email</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"unicorn42@example.com"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  function</span><span style="color:#61AFEF"> updateUsername</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic">newUsername</span><span style="color:#ABB2BF">) {</span></span>\n<span class="line"><span style="color:#61AFEF">    setUser</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">userData</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> ({ ...</span><span style="color:#E06C75">userData</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">username</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">newUsername</span><span style="color:#ABB2BF"> }));</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>Welcome back, </span><span style="color:#C678DD">{</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">username</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E5C07B">UserContext.Provider</span><span style="color:#D19A66;font-style:italic"> value</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">{ ...</span><span style="color:#E06C75">user</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">updateUsername</span><span style="color:#ABB2BF"> }</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E5C07B">UserProfile</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;/</span><span style="color:#E5C07B">UserContext.Provider</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "UserContext.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">createContext</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> UserContext</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> createContext</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "UserProfile.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useContext</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">UserContext</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "./UserContext"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> UserProfile</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> { </span><span style="color:#E5C07B">username</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">email</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">updateUsername</span><span style="color:#ABB2BF"> } </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useContext</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">UserContext</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">h2</span><span style="color:#ABB2BF">>My Profile&#x3C;/</span><span style="color:#E06C75">h2</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Username: </span><span style="color:#C678DD">{</span><span style="color:#E06C75">username</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Email: </span><span style="color:#C678DD">{</span><span style="color:#E06C75">email</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">button</span><span style="color:#D19A66;font-style:italic"> onClick</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#ABB2BF">() </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> updateUsername</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"Jane"</span><span style="color:#ABB2BF">)</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">        Update username to Jane</span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;/</span><span style="color:#E06C75">button</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/5-context/react",
  },
  {
    frameworkId: "react",
    snippetId: "input-text",
    files: [
      {
        fileName: "InputHello.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> InputHello</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">text</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setText</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"Hello world"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  function</span><span style="color:#61AFEF"> handleChange</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic">event</span><span style="color:#ABB2BF">) {</span></span>\n<span class="line"><span style="color:#61AFEF">    setText</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">event</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">target</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span><span style="color:#C678DD">{</span><span style="color:#E06C75">text</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">input</span><span style="color:#D19A66;font-style:italic"> value</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">text</span><span style="color:#C678DD">}</span><span style="color:#D19A66;font-style:italic"> onChange</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">handleChange</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/1-input-text/react",
  },
  {
    frameworkId: "react",
    snippetId: "checkbox",
    files: [
      {
        fileName: "IsAvailable.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> IsAvailable</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">isAvailable</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setIsAvailable</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">false</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  function</span><span style="color:#61AFEF"> handleChange</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#61AFEF">    setIsAvailable</span><span style="color:#ABB2BF">(</span><span style="color:#56B6C2">!</span><span style="color:#E06C75">isAvailable</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">input</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        id</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"is-available"</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        type</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"checkbox"</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        checked</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">isAvailable</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        onChange</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">handleChange</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">      /></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">label</span><span style="color:#D19A66;font-style:italic"> htmlFor</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"is-available"</span><span style="color:#ABB2BF">>Is available&#x3C;/</span><span style="color:#E06C75">label</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/2-checkbox/react",
  },
  {
    frameworkId: "react",
    snippetId: "radio",
    files: [
      {
        fileName: "PickPill.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> PickPill</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">picked</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setPicked</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  function</span><span style="color:#61AFEF"> handleChange</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic">event</span><span style="color:#ABB2BF">) {</span></span>\n<span class="line"><span style="color:#61AFEF">    setPicked</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">event</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">target</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">>Picked: </span><span style="color:#C678DD">{</span><span style="color:#E06C75">picked</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">></span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">input</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        id</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"blue-pill"</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        checked</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">picked</span><span style="color:#56B6C2"> ===</span><span style="color:#98C379"> "blue"</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        type</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"radio"</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        value</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"blue"</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        onChange</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">handleChange</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">      /></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">label</span><span style="color:#D19A66;font-style:italic"> htmlFor</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"blue-pill"</span><span style="color:#ABB2BF">>Blue pill&#x3C;/</span><span style="color:#E06C75">label</span><span style="color:#ABB2BF">></span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">input</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        id</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"red-pill"</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        checked</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">picked</span><span style="color:#56B6C2"> ===</span><span style="color:#98C379"> "red"</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        type</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"radio"</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        value</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"red"</span></span>\n<span class="line"><span style="color:#D19A66;font-style:italic">        onChange</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">handleChange</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">      /></span></span>\n<span class="line"><span style="color:#ABB2BF">      &#x3C;</span><span style="color:#E06C75">label</span><span style="color:#D19A66;font-style:italic"> htmlFor</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"red-pill"</span><span style="color:#ABB2BF">>Red pill&#x3C;/</span><span style="color:#E06C75">label</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/3-radio/react",
  },
  {
    frameworkId: "react",
    snippetId: "select",
    files: [
      {
        fileName: "ColorSelect.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> colors</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span></span>\n<span class="line"><span style="color:#ABB2BF">  { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">1</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">  { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">2</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"blue"</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">  { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">3</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">  { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">4</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"gray"</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">isDisabled</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">true</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> ColorSelect</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">selectedColorId</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setSelectedColorId</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">2</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  function</span><span style="color:#61AFEF"> handleChange</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic">event</span><span style="color:#ABB2BF">) {</span></span>\n<span class="line"><span style="color:#61AFEF">    setSelectedColorId</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">event</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">target</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">select</span><span style="color:#D19A66;font-style:italic"> value</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">selectedColorId</span><span style="color:#C678DD">}</span><span style="color:#D19A66;font-style:italic"> onChange</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E06C75">handleChange</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#C678DD">      {</span><span style="color:#E5C07B">colors</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">map</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">color</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E06C75">option</span><span style="color:#D19A66;font-style:italic"> key</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">id</span><span style="color:#C678DD">}</span><span style="color:#D19A66;font-style:italic"> value</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">id</span><span style="color:#C678DD">}</span><span style="color:#D19A66;font-style:italic"> disabled</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isDisabled</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#C678DD">          {</span><span style="color:#E5C07B">color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">text</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">        &#x3C;/</span><span style="color:#E06C75">option</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      ))</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/</span><span style="color:#E06C75">select</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/4-select/react",
  },
  {
    frameworkId: "react",
    snippetId: "render-app",
    files: [
      {
        fileName: "index.html",
        ext: "html",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF">&#x3C;!</span><span style="color:#E06C75">doctype</span><span style="color:#D19A66"> html</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">&#x3C;</span><span style="color:#E06C75">html</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  &#x3C;</span><span style="color:#E06C75">body</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">div</span><span style="color:#D19A66"> id</span><span style="color:#ABB2BF">=</span><span style="color:#98C379">"app"</span><span style="color:#ABB2BF">>&#x3C;/</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">script</span><span style="color:#D19A66"> type</span><span style="color:#ABB2BF">=</span><span style="color:#98C379">"module"</span><span style="color:#D19A66"> src</span><span style="color:#ABB2BF">=</span><span style="color:#98C379">"./main.jsx"</span><span style="color:#ABB2BF">>&#x3C;/</span><span style="color:#E06C75">script</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  &#x3C;/</span><span style="color:#E06C75">body</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">html</span><span style="color:#ABB2BF">></span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "main.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> React</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> ReactDOM</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "react-dom/client"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> App</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./App"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E5C07B">ReactDOM</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">createRoot</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">document</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">getElementById</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"app"</span><span style="color:#ABB2BF">)).</span><span style="color:#61AFEF">render</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#ABB2BF">  &#x3C;</span><span style="color:#E5C07B">React.StrictMode</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E5C07B">App</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">  &#x3C;/</span><span style="color:#E5C07B">React.StrictMode</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "App.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> &#x3C;</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>Hello world&#x3C;/</span><span style="color:#E06C75">h1</span><span style="color:#ABB2BF">>;</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/7-webapp-features/1-render-app/react",
  },
  {
    frameworkId: "react",
    snippetId: "fetch-data",
    files: [
      {
        fileName: "App.jsx",
        ext: "jsx",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> useFetchUsers</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./useFetchUsers"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> { </span><span style="color:#E5C07B">isLoading</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">error</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">data</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">users</span><span style="color:#ABB2BF"> } </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useFetchUsers</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;></span></span>\n<span class="line"><span style="color:#C678DD">      {</span><span style="color:#E06C75">isLoading</span><span style="color:#C678DD"> ?</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>Fetching users...&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      ) </span><span style="color:#C678DD">:</span><span style="color:#E06C75"> error</span><span style="color:#C678DD"> ?</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">        &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">>An error occurred while fetching users&#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">      ) </span><span style="color:#C678DD">:</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#E06C75">        users</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">          &#x3C;</span><span style="color:#E06C75">ul</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#C678DD">            {</span><span style="color:#E5C07B">users</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">map</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">user</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span></span>\n<span class="line"><span style="color:#ABB2BF">              &#x3C;</span><span style="color:#E06C75">li</span><span style="color:#D19A66;font-style:italic"> key</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">login</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">uuid</span><span style="color:#C678DD">}</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">                &#x3C;</span><span style="color:#E06C75">img</span><span style="color:#D19A66;font-style:italic"> src</span><span style="color:#56B6C2">=</span><span style="color:#C678DD">{</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">picture</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">thumbnail</span><span style="color:#C678DD">}</span><span style="color:#D19A66;font-style:italic"> alt</span><span style="color:#56B6C2">=</span><span style="color:#98C379">"user"</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">                &#x3C;</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#C678DD">                  {</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">name</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">first</span><span style="color:#C678DD">}</span><span style="color:#C678DD"> {</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">name</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">last</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">                &#x3C;/</span><span style="color:#E06C75">p</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">              &#x3C;/</span><span style="color:#E06C75">li</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">            ))</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">          &#x3C;/</span><span style="color:#E06C75">ul</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">        )</span></span>\n<span class="line"><span style="color:#ABB2BF">      )</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;/></span></span>\n<span class="line"><span style="color:#ABB2BF">  );</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "useFetchUsers.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">useEffect</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">useState</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "react"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> useFetchUsers</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">data</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setData</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">error</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setError</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#ABB2BF"> [</span><span style="color:#E5C07B">isLoading</span><span style="color:#ABB2BF">, </span><span style="color:#E5C07B">setIsLoading</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#61AFEF"> useState</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">false</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  useEffect</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">    async</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> fetchData</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#61AFEF">      setIsLoading</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">true</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#C678DD">      try</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">        const</span><span style="color:#E5C07B"> response</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> await</span><span style="color:#61AFEF"> fetch</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"https://randomuser.me/api/?results=3"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#C678DD">        const</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">results</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">users</span><span style="color:#ABB2BF"> } </span><span style="color:#56B6C2">=</span><span style="color:#C678DD"> await</span><span style="color:#E5C07B"> response</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">json</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#61AFEF">        setData</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">users</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#61AFEF">        setError</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#ABB2BF">      } </span><span style="color:#C678DD">catch</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">err</span><span style="color:#ABB2BF">) {</span></span>\n<span class="line"><span style="color:#61AFEF">        setData</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#61AFEF">        setError</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">err</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">      }</span></span>\n<span class="line"><span style="color:#61AFEF">      setIsLoading</span><span style="color:#ABB2BF">(</span><span style="color:#D19A66">false</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">    }</span></span>\n<span class="line"><span style="color:#61AFEF">    fetchData</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#ABB2BF">  }, []);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">isLoading</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">error</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">data</span><span style="color:#ABB2BF"> };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/7-webapp-features/2-fetch-data/react",
  },
];
