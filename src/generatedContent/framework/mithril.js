// File generated from "node scripts/generateContent.js", DO NOT EDIT/COMMIT
export default [
  {
    frameworkId: "mithril",
    snippetId: "declare-state",
    files: [
      {
        fileName: "Name.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> Name</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> name</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> "John"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"h1"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`Hello </span><span style="color:#C678DD">${</span><span style="color:#E06C75">name</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/1-reactivity/1-declare-state/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "update-state",
    files: [
      {
        fileName: "Name.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> Name</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> name</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> "John"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#E06C75">  name</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> "Jane"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"h1"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`Hello </span><span style="color:#C678DD">${</span><span style="color:#E06C75">name</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/1-reactivity/2-update-state/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "computed-state",
    files: [
      {
        fileName: "DoubleCount.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> DoubleCount</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> count</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> 10</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> doubleCount</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> count</span><span style="color:#56B6C2"> *</span><span style="color:#D19A66"> 2</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"div"</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">doubleCount</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/1-reactivity/3-computed-state/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "minimal-template",
    files: [
      {
        fileName: "HelloWorld.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> HelloWorld</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"h1"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"Hello World"</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/1-minimal-template/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "styling",
    files: [
      {
        fileName: "CssStyle.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#98C379"> "./style.css"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> CssStyle</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">        "div"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"h1.title"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"I am red"</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"button"</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">style</span><span style="color:#ABB2BF">: { </span><span style="color:#E06C75">fontSize</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"10rem"</span><span style="color:#ABB2BF"> } }, </span><span style="color:#98C379">"I am a button"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#ABB2BF">      ),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "style.css",
        ext: "css",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#D19A66">.title</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  color: </span><span style="color:#D19A66">red</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/2-styling/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "loop",
    files: [
      {
        fileName: "Colors.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> Colors</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> colors</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"blue"</span><span style="color:#ABB2BF">];</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">        "ul"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E5C07B">        colors</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">map</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">color</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic">idx</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"li"</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">key</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">idx</span><span style="color:#ABB2BF"> }, </span><span style="color:#E06C75">color</span><span style="color:#ABB2BF">))</span></span>\n<span class="line"><span style="color:#ABB2BF">      ),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/3-loop/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "event-click",
    files: [
      {
        fileName: "Counter.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> Counter</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> count</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> 0</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#61AFEF"> incrementCount</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">count</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> count</span><span style="color:#56B6C2"> +</span><span style="color:#D19A66"> 1</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">        "div"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`Counter: </span><span style="color:#C678DD">${</span><span style="color:#E06C75">count</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"button"</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">onclick</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">incrementCount</span><span style="color:#ABB2BF"> }, </span><span style="color:#98C379">"+1"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#ABB2BF">      ),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/4-event-click/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "dom-ref",
    files: [
      {
        fileName: "InputFocused.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> InputFocused</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> value</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> ""</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"input"</span><span style="color:#ABB2BF">, {</span></span>\n<span class="line"><span style="color:#61AFEF">        oncreate</span><span style="color:#ABB2BF">: ({ </span><span style="color:#E06C75;font-style:italic">dom</span><span style="color:#ABB2BF"> }) </span><span style="color:#C678DD">=></span><span style="color:#E5C07B"> dom</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">focus</span><span style="color:#ABB2BF">(),</span></span>\n<span class="line"><span style="color:#E06C75">        type</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"text"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        value</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">        oninput</span><span style="color:#ABB2BF">: (</span><span style="color:#E06C75;font-style:italic">e</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">value</span><span style="color:#56B6C2"> =</span><span style="color:#E5C07B"> e</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">target</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#ABB2BF">      }),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/5-dom-ref/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "conditional",
    files: [
      {
        fileName: "TrafficLight.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> TRAFFIC_LIGHTS</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"orange"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> TrafficLight</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> lightIndex</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> 0</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#61AFEF"> currentLight</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#E5C07B"> TRAFFIC_LIGHTS</span><span style="color:#ABB2BF">[</span><span style="color:#E06C75">lightIndex</span><span style="color:#ABB2BF">];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#61AFEF"> nextLight</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">lightIndex</span><span style="color:#56B6C2"> +</span><span style="color:#D19A66"> 1</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">%</span><span style="color:#E5C07B"> TRAFFIC_LIGHTS</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">length</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#61AFEF"> instructions</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">    switch</span><span style="color:#ABB2BF"> (</span><span style="color:#61AFEF">currentLight</span><span style="color:#ABB2BF">()) {</span></span>\n<span class="line"><span style="color:#C678DD">      case</span><span style="color:#98C379"> "red"</span><span style="color:#ABB2BF">:</span></span>\n<span class="line"><span style="color:#C678DD">        return</span><span style="color:#98C379"> "STOP"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">      case</span><span style="color:#98C379"> "orange"</span><span style="color:#ABB2BF">:</span></span>\n<span class="line"><span style="color:#C678DD">        return</span><span style="color:#98C379"> "SLOW DOWN"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">      case</span><span style="color:#98C379"> "green"</span><span style="color:#ABB2BF">:</span></span>\n<span class="line"><span style="color:#C678DD">        return</span><span style="color:#98C379"> "GO"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">    }</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">        "div"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"button"</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">onclick</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">nextLight</span><span style="color:#ABB2BF"> }, </span><span style="color:#98C379">"Next light"</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`Light is: </span><span style="color:#C678DD">${</span><span style="color:#61AFEF">currentLight</span><span style="color:#ABB2BF">()</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"You must "</span><span style="color:#ABB2BF">, </span><span style="color:#61AFEF">m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"span"</span><span style="color:#ABB2BF">, </span><span style="color:#61AFEF">instructions</span><span style="color:#ABB2BF">()))</span></span>\n<span class="line"><span style="color:#ABB2BF">      ),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/6-conditional/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "on-mount",
    files: [
      {
        fileName: "PageTitle.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> PageTitle</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`Page title: </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">document</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">title</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/3-lifecycle/1-on-mount/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "on-unmount",
    files: [
      {
        fileName: "Time.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> Time</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> time</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> new</span><span style="color:#61AFEF"> Date</span><span style="color:#ABB2BF">().</span><span style="color:#61AFEF">toLocaleTimeString</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> timer</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> setInterval</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">    time</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> new</span><span style="color:#61AFEF"> Date</span><span style="color:#ABB2BF">().</span><span style="color:#61AFEF">toLocaleTimeString</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#E5C07B">    m</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">redraw</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#ABB2BF">  }, </span><span style="color:#D19A66">1000</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`Current time: </span><span style="color:#C678DD">${</span><span style="color:#E06C75">time</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">    onremove</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> clearInterval</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">timer</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/3-lifecycle/2-on-unmount/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "props",
    files: [
      {
        fileName: "App.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> UserProfile</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./UserProfile.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">UserProfile</span><span style="color:#ABB2BF">, {</span></span>\n<span class="line"><span style="color:#E06C75">        name</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"john"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        age</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">20</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">        favouriteColors</span><span style="color:#ABB2BF">: [</span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"blue"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">],</span></span>\n<span class="line"><span style="color:#E06C75">        isAvailable</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">true</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">      }),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "UserProfile.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#61AFEF"> UserProfile</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> ({</span></span>\n<span class="line"><span style="color:#61AFEF">  view</span><span style="color:#ABB2BF">: ({ </span><span style="color:#E06C75">attrs</span><span style="color:#ABB2BF">: { </span><span style="color:#E06C75;font-style:italic">name</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic">age</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic">favouriteColors</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic">isAvailable</span><span style="color:#ABB2BF"> } }) </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">    m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">      "div"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`My name is </span><span style="color:#C678DD">${</span><span style="color:#E06C75">name</span><span style="color:#C678DD">}</span><span style="color:#98C379">!`</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`My age is </span><span style="color:#C678DD">${</span><span style="color:#E06C75">age</span><span style="color:#C678DD">}</span><span style="color:#98C379">!`</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`My favourite colors are </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">favouriteColors</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">join</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">", "</span><span style="color:#ABB2BF">)</span><span style="color:#C678DD">}</span><span style="color:#98C379">!`</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`I am </span><span style="color:#C678DD">${</span><span style="color:#E06C75">isAvailable</span><span style="color:#C678DD"> ?</span><span style="color:#98C379"> "available"</span><span style="color:#C678DD"> :</span><span style="color:#98C379"> "not available"</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#ABB2BF">    ),</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/1-props/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "emit-to-parent",
    files: [
      {
        fileName: "AnswerButton.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#61AFEF"> AnswerButton</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> ({ </span><span style="color:#E06C75">attrs</span><span style="color:#ABB2BF">: { </span><span style="color:#E06C75;font-style:italic">onYes</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic">onNo</span><span style="color:#ABB2BF"> } }) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> ({</span></span>\n<span class="line"><span style="color:#61AFEF">  view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">    m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">      "div"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"button"</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">onclick</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">onYes</span><span style="color:#ABB2BF"> }, </span><span style="color:#98C379">"YES"</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"button"</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">onclick</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">onNo</span><span style="color:#ABB2BF"> }, </span><span style="color:#98C379">"NO"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#ABB2BF">    ),</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "App.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> AnswerButton</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./AnswerButton.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> isHappy</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> true</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#61AFEF"> onAnswerNo</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">isHappy</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> false</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#61AFEF"> onAnswerYes</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">isHappy</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> true</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">        ""</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"Are you happy?"</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">style</span><span style="color:#ABB2BF">: { </span><span style="color:#E06C75">fontSize</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">50</span><span style="color:#ABB2BF"> } }, </span><span style="color:#E06C75">isHappy</span><span style="color:#C678DD"> ?</span><span style="color:#98C379"> "😀"</span><span style="color:#C678DD"> :</span><span style="color:#98C379"> "😥"</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">AnswerButton</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">onYes</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">onAnswerYes</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">onNo</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">onAnswerNo</span><span style="color:#ABB2BF"> })</span></span>\n<span class="line"><span style="color:#ABB2BF">      ),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/2-emit-to-parent/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "slot",
    files: [
      {
        fileName: "App.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">FunnyButton</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "./FunnyButton.jsx"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> m</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">FunnyButton</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"Click me!"</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "FunnyButton.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#61AFEF"> FunnyButton</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> ({</span></span>\n<span class="line"><span style="color:#61AFEF">  view</span><span style="color:#ABB2BF">: ({ </span><span style="color:#E06C75;font-style:italic">children</span><span style="color:#ABB2BF"> }) </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">    m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">      "button"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">      {</span></span>\n<span class="line"><span style="color:#E06C75">        style</span><span style="color:#ABB2BF">: {</span></span>\n<span class="line"><span style="color:#E06C75">          background</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"rgba(0, 0, 0, 0.4)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          color</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"#fff"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          padding</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"10px 20px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          fontSize</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"30px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          border</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"2px solid #fff"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          margin</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"8px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          transform</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"scale(0.9)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          boxShadow</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"4px 4px rgba(0, 0, 0, 0.4)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          transition</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"transform 0.2s cubic-bezier(0.34, 1.65, 0.88, 0.925) 0s"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          outline</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"0"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">        },</span></span>\n<span class="line"><span style="color:#ABB2BF">      },</span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">children</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#ABB2BF">    ),</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/3-slot/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "slot-fallback",
    files: [
      {
        fileName: "App.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> FunnyButton</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./FunnyButton.jsx"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">""</span><span style="color:#ABB2BF">, </span><span style="color:#61AFEF">m</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">FunnyButton</span><span style="color:#ABB2BF">), </span><span style="color:#61AFEF">m</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">FunnyButton</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"I got Content"</span><span style="color:#ABB2BF">)),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "FunnyButton.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#61AFEF"> FunnyButton</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> ({ </span><span style="color:#E06C75;font-style:italic">children</span><span style="color:#ABB2BF"> }) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> ({</span></span>\n<span class="line"><span style="color:#61AFEF">  view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">    m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">      "button"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">      {</span></span>\n<span class="line"><span style="color:#E06C75">        style</span><span style="color:#ABB2BF">: {</span></span>\n<span class="line"><span style="color:#E06C75">          background</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"rgba(0, 0, 0, 0.4)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          color</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"#fff"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          padding</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"10px 20px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          fontSize</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"30px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          border</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"2px solid #fff"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          margin</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"8px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          transform</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"scale(0.9)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          boxShadow</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"4px 4px rgba(0, 0, 0, 0.4)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          transition</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"transform 0.2s cubic-bezier(0.34, 1.65, 0.88, 0.925) 0s"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          outline</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"0"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">        },</span></span>\n<span class="line"><span style="color:#ABB2BF">      },</span></span>\n<span class="line"><span style="color:#E06C75">      children</span><span style="color:#56B6C2"> ||</span><span style="color:#61AFEF"> m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"span"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"No content found"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#ABB2BF">    ),</span></span>\n<span class="line"><span style="color:#ABB2BF">});</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/4-slot-fallback/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "context",
    files: [
      {
        fileName: "App.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> UserProfile</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./UserProfile"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> user</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">    id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">1</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">    username</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"unicorn42"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">    email</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"unicorn42@example.com"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#61AFEF"> updateUsername</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75;font-style:italic">username</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">username</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> username</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">        ""</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"h1"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`Welcome Back, </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">username</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">UserProfile</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">user</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">updateUsername</span><span style="color:#ABB2BF"> })</span></span>\n<span class="line"><span style="color:#ABB2BF">      ),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "UserProfile.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> UserProfile</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: ({</span></span>\n<span class="line"><span style="color:#E06C75">      attrs</span><span style="color:#ABB2BF">: {</span></span>\n<span class="line"><span style="color:#E06C75">        user</span><span style="color:#ABB2BF">: { </span><span style="color:#E06C75">username</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">email</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#E06C75">        updateUsername</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">      },</span></span>\n<span class="line"><span style="color:#ABB2BF">    }) </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">        "div"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"h2"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"My Profile"</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`Username: </span><span style="color:#C678DD">${</span><span style="color:#E06C75">username</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`Email : </span><span style="color:#C678DD">${</span><span style="color:#E06C75">email</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">          "button"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">          { </span><span style="color:#61AFEF">onclick</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> updateUsername</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"Jane"</span><span style="color:#ABB2BF">) },</span></span>\n<span class="line"><span style="color:#98C379">          "Update username to Jane"</span></span>\n<span class="line"><span style="color:#ABB2BF">        )</span></span>\n<span class="line"><span style="color:#ABB2BF">      ),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/5-context/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "input-text",
    files: [
      {
        fileName: "InputHello.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> InputHello</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> text</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> "Hello world"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#61AFEF"> handleChange</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> ({ </span><span style="color:#E06C75">target</span><span style="color:#ABB2BF">: { </span><span style="color:#E06C75;font-style:italic">value</span><span style="color:#ABB2BF"> } }) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">text</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> value</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">""</span><span style="color:#ABB2BF">, </span><span style="color:#61AFEF">m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">), </span><span style="color:#61AFEF">m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"input"</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">value</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">onchange</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">handleChange</span><span style="color:#ABB2BF"> })),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/1-input-text/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "checkbox",
    files: [
      {
        fileName: "IsAvailable.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> IsAvailable</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> isAvailable</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> false</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#61AFEF"> onUpdate</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">isAvailable</span><span style="color:#56B6C2"> =</span><span style="color:#56B6C2"> !</span><span style="color:#E06C75">isAvailable</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">        ""</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"input"</span><span style="color:#ABB2BF">, {</span></span>\n<span class="line"><span style="color:#E06C75">          id</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"is-available"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          type</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"checkbox"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          checked</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">isAvailable</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          onchange</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">onUpdate</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">        }),</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"label"</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">for</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"is-available"</span><span style="color:#ABB2BF"> }, </span><span style="color:#98C379">"Is available"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#ABB2BF">      ),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/2-checkbox/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "radio",
    files: [
      {
        fileName: "PickPill.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> PickPill</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> picked</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> "red"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> pills</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"blue"</span><span style="color:#ABB2BF">];</span></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#61AFEF"> handleChange</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> ({ </span><span style="color:#E06C75">target</span><span style="color:#ABB2BF">: { </span><span style="color:#E06C75;font-style:italic">value</span><span style="color:#ABB2BF"> } }) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">picked</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> value</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">        ""</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">""</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`Picked: </span><span style="color:#C678DD">${</span><span style="color:#E06C75">picked</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#E5C07B">        pills</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">map</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">pill</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">          m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">            "."</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">            m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"input"</span><span style="color:#ABB2BF">, {</span></span>\n<span class="line"><span style="color:#E06C75">              id</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">pill</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">              checked</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">picked</span><span style="color:#56B6C2"> ==</span><span style="color:#E06C75"> pill</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">              type</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"radio"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">              value</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">pill</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">              onchange</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">handleChange</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">            }),</span></span>\n<span class="line"><span style="color:#61AFEF">            m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"label"</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">for</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">pill</span><span style="color:#ABB2BF"> }, </span><span style="color:#E06C75">pill</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#ABB2BF">          )</span></span>\n<span class="line"><span style="color:#ABB2BF">        )</span></span>\n<span class="line"><span style="color:#ABB2BF">      ),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/3-radio/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "select",
    files: [
      {
        fileName: "ColorSelect.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> colors</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span></span>\n<span class="line"><span style="color:#ABB2BF">  { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">1</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">  { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">2</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"blue"</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">  { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">3</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">  { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">4</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"gray"</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">isDisabled</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">true</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> ColorSelect</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> selectedColorId</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> 2</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  const</span><span style="color:#61AFEF"> handleSelect</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> ({ </span><span style="color:#E06C75">target</span><span style="color:#ABB2BF">: { </span><span style="color:#E06C75;font-style:italic">value</span><span style="color:#ABB2BF"> } }) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">selectedColorId</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> value</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">      m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">        "select"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">        { </span><span style="color:#E06C75">value</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">selectedColorId</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">onchange</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">handleSelect</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#E5C07B">        colors</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">map</span><span style="color:#ABB2BF">(({ </span><span style="color:#E06C75;font-style:italic">id</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic">text</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75;font-style:italic">isDisabled</span><span style="color:#ABB2BF"> }) </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">          m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"option"</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">key</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">disabled</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">isDisabled</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">value</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF"> }, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#ABB2BF">        )</span></span>\n<span class="line"><span style="color:#ABB2BF">      ),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/4-select/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "render-app",
    files: [
      {
        fileName: "index.html",
        ext: "html",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF">&#x3C;!</span><span style="color:#E06C75">doctype</span><span style="color:#D19A66"> html</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">&#x3C;</span><span style="color:#E06C75">html</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  &#x3C;</span><span style="color:#E06C75">body</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">div</span><span style="color:#D19A66"> id</span><span style="color:#ABB2BF">=</span><span style="color:#98C379">"app"</span><span style="color:#ABB2BF">>&#x3C;/</span><span style="color:#E06C75">div</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">script</span><span style="color:#D19A66"> type</span><span style="color:#ABB2BF">=</span><span style="color:#98C379">"module"</span><span style="color:#D19A66"> src</span><span style="color:#ABB2BF">=</span><span style="color:#98C379">"./main.jsx"</span><span style="color:#ABB2BF">>&#x3C;/</span><span style="color:#E06C75">script</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  &#x3C;/</span><span style="color:#E06C75">body</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">html</span><span style="color:#ABB2BF">></span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "main.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> App</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "./App"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#E5C07B">m</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">mount</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">document</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">getElementById</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"app"</span><span style="color:#ABB2BF">), </span><span style="color:#E06C75">App</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "App.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"Hello World"</span><span style="color:#ABB2BF">),</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/7-webapp-features/1-render-app/mithril",
  },
  {
    frameworkId: "mithril",
    snippetId: "fetch-data",
    files: [
      {
        fileName: "App.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#E06C75"> m</span><span style="color:#C678DD"> from</span><span style="color:#98C379"> "mithril"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> App</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> isLoading</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> false</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> error</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> null</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> users</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  async</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> fetchUsers</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E06C75">    isLoading</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> true</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">    try</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">      const</span><span style="color:#ABB2BF"> { </span><span style="color:#E5C07B">results</span><span style="color:#ABB2BF"> } </span><span style="color:#56B6C2">=</span><span style="color:#C678DD"> await</span><span style="color:#E5C07B"> m</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">request</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">        "https://randomuser.me/api/?results=3"</span></span>\n<span class="line"><span style="color:#ABB2BF">      );</span></span>\n<span class="line"><span style="color:#E06C75">      users</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> results</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">    } </span><span style="color:#C678DD">catch</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">err</span><span style="color:#ABB2BF">) {</span></span>\n<span class="line"><span style="color:#E06C75">      error</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> err</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">    }</span></span>\n<span class="line"><span style="color:#E06C75">    isLoading</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> false</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">    oninit</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">fetchUsers</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">    view</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">      if</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">isLoading</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">return</span><span style="color:#61AFEF"> m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"Fetching users..."</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#C678DD">      if</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">error</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">return</span><span style="color:#61AFEF"> m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"An error occurred while fetching users"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#C678DD">      return</span><span style="color:#E5C07B"> users</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">map</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75;font-style:italic">user</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">        m</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#98C379">          "li"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">          { </span><span style="color:#E06C75">key</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">login</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">uuid</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#61AFEF">          m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"img"</span><span style="color:#ABB2BF">, { </span><span style="color:#E06C75">src</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">picture</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">thumbnail</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">alt</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"user"</span><span style="color:#ABB2BF"> }),</span></span>\n<span class="line"><span style="color:#61AFEF">          m</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"p"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">`</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">name</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">first</span><span style="color:#C678DD">}</span><span style="color:#C678DD"> ${</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">name</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">last</span><span style="color:#C678DD">}</span><span style="color:#98C379">`</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#ABB2BF">        )</span></span>\n<span class="line"><span style="color:#ABB2BF">      );</span></span>\n<span class="line"><span style="color:#ABB2BF">    },</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/7-webapp-features/2-fetch-data/mithril",
  },
];
