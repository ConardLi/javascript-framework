// File generated from "node scripts/generateContent.js", DO NOT EDIT/COMMIT
export default [
  {
    frameworkId: "lit",
    snippetId: "declare-state",
    files: [
      {
        fileName: "name.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"x-name"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> XName</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">state</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  name</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> "John"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;h1>Hello </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">name</span><span style="color:#C678DD">}</span><span style="color:#98C379">!&#x3C;/h1>`</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/1-reactivity/1-declare-state/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "update-state",
    files: [
      {
        fileName: "name.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"x-name"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> XName</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">state</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  name</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> "John"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  constructor</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E5C07B;font-style:italic">    super</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">name</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> "Jane"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;h1>Hello </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">name</span><span style="color:#C678DD">}</span><span style="color:#98C379">!&#x3C;/h1>`</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/1-reactivity/2-update-state/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "computed-state",
    files: [
      {
        fileName: "double-count.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"double-count"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> DoubleCount</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">state</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  count</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> 10</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> doubleCount</span><span style="color:#56B6C2"> =</span><span style="color:#E5C07B"> this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">count</span><span style="color:#56B6C2"> *</span><span style="color:#D19A66"> 2</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;div></span><span style="color:#C678DD">${</span><span style="color:#E06C75">doubleCount</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/div>`</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/1-reactivity/3-computed-state/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "minimal-template",
    files: [
      {
        fileName: "hello-world.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"hello-world"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> HelloWorld</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;h1>Hello world&#x3C;/h1>`</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/1-minimal-template/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "styling",
    files: [
      {
        fileName: "css-style.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">css</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">styleMap</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/directives/style-map.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"css-style"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> CssStyle</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  static</span><span style="color:#E06C75"> styles</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> css</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">    .title {</span></span>\n<span class="line"><span style="color:#98C379">      color: red;</span></span>\n<span class="line"><span style="color:#98C379">    }</span></span>\n<span class="line"><span style="color:#98C379">  `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;h1 class="title">I am red&#x3C;/h1></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;button style=</span><span style="color:#C678DD">${</span><span style="color:#61AFEF">styleMap</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75">fontSize</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"10rem"</span><span style="color:#ABB2BF"> })</span><span style="color:#C678DD">}</span><span style="color:#98C379">>I am a button&#x3C;/button></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/2-styling/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "loop",
    files: [
      {
        fileName: "colors-list.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">repeat</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/directives/repeat.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"colors-list"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> ColorsList</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">  colors</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"blue"</span><span style="color:#ABB2BF">];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;ul></span></span>\n<span class="line"><span style="color:#C678DD">        ${</span><span style="color:#61AFEF">repeat</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#E5C07B">          this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">colors</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">          (</span><span style="color:#E06C75;font-style:italic">color</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#E06C75"> color</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">          (</span><span style="color:#E06C75;font-style:italic">color</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;li></span><span style="color:#C678DD">${</span><span style="color:#E06C75">color</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/li>`</span></span>\n<span class="line"><span style="color:#ABB2BF">        )</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;/ul></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/3-loop/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "event-click",
    files: [
      {
        fileName: "x-counter.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"x-counter"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> XCounter</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">state</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  count</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> 0</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  incrementCount</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">count</span><span style="color:#56B6C2"> =</span><span style="color:#E5C07B"> this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">count</span><span style="color:#56B6C2"> +</span><span style="color:#D19A66"> 1</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;p>Counter: </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">count</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/p></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;button @click=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">incrementCount</span><span style="color:#C678DD">}</span><span style="color:#98C379">>+1&#x3C;/button></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/4-event-click/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "dom-ref",
    files: [
      {
        fileName: "input-focused.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">query</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"input-focused"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> InputFocused</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">query</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"input"</span><span style="color:#ABB2BF">) </span><span style="color:#E06C75">inputEl</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  firstUpdated</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">inputEl</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">focus</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;input type="text" />`</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/5-dom-ref/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "conditional",
    files: [
      {
        fileName: "traffic-light.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">choose</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/directives/choose.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> TRAFFIC_LIGHTS</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"orange"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"traffic-light"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> TrafficLight</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">state</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  lightIndex</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> 0</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">  get</span><span style="color:#61AFEF"> light</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#E5C07B"> TRAFFIC_LIGHTS</span><span style="color:#ABB2BF">[</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">lightIndex</span><span style="color:#ABB2BF">];</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  nextLight</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">lightIndex</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> (</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">lightIndex</span><span style="color:#56B6C2"> +</span><span style="color:#D19A66"> 1</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">%</span><span style="color:#E5C07B"> TRAFFIC_LIGHTS</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">length</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;button @click=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">nextLight</span><span style="color:#C678DD">}</span><span style="color:#98C379">>Next light&#x3C;/button></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;p>Light is </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">light</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/p></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;p></span></span>\n<span class="line"><span style="color:#98C379">        You must</span></span>\n<span class="line"><span style="color:#C678DD">        ${</span><span style="color:#61AFEF">choose</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">light</span><span style="color:#ABB2BF">, [</span></span>\n<span class="line"><span style="color:#ABB2BF">          [</span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">, () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;span>STOP&#x3C;/span>`</span><span style="color:#ABB2BF">],</span></span>\n<span class="line"><span style="color:#ABB2BF">          [</span><span style="color:#98C379">"orange"</span><span style="color:#ABB2BF">, () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;span>SLOW DOWN&#x3C;/span>`</span><span style="color:#ABB2BF">],</span></span>\n<span class="line"><span style="color:#ABB2BF">          [</span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">, () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;span>GO&#x3C;/span>`</span><span style="color:#ABB2BF">],</span></span>\n<span class="line"><span style="color:#ABB2BF">        ])</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;/p></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/2-templating/6-conditional/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "on-mount",
    files: [
      {
        fileName: "page-title.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"page-title"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> PageTitle</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">state</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  pageTitle</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> ""</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  connectedCallback</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E5C07B;font-style:italic">    super</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">connectedCallback</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">pageTitle</span><span style="color:#56B6C2"> =</span><span style="color:#E5C07B"> document</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">title</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;p>Page title: </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">pageTitle</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/p>`</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/3-lifecycle/1-on-mount/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "on-unmount",
    files: [
      {
        fileName: "x-time.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"x-time"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> XTime</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">state</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  time</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> ""</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E06C75">  timer</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  connectedCallback</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E5C07B;font-style:italic">    super</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">connectedCallback</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">timer</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> setInterval</span><span style="color:#ABB2BF">(() </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E5C07B">      this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">time</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> new</span><span style="color:#61AFEF"> Date</span><span style="color:#ABB2BF">().</span><span style="color:#61AFEF">toLocaleTimeString</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#ABB2BF">    }, </span><span style="color:#D19A66">1000</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  disconnectedCallback</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E5C07B;font-style:italic">    super</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">disconnectedCallback</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#61AFEF">    clearInterval</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">timer</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;p>Current time: </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">time</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/p>`</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/3-lifecycle/2-on-unmount/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "props",
    files: [
      {
        fileName: "x-app.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#98C379"> "./user-profile"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"x-app"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> XApp</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;user-profile</span></span>\n<span class="line"><span style="color:#98C379">      name="John"</span></span>\n<span class="line"><span style="color:#98C379">      age="20"</span></span>\n<span class="line"><span style="color:#98C379">      .favouriteColors=</span><span style="color:#C678DD">${</span><span style="color:#ABB2BF">[</span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"blue"</span><span style="color:#ABB2BF">, </span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF">]</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">      isAvailable</span></span>\n<span class="line"><span style="color:#98C379">    >&#x3C;/user-profile>`</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "user-profile.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">property</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"user-profile"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> UserProfile</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">property</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  name</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> ""</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">property</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75">type</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">Number</span><span style="color:#ABB2BF"> })</span></span>\n<span class="line"><span style="color:#E06C75">  age</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> null</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">property</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75">type</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">Array</span><span style="color:#ABB2BF"> })</span></span>\n<span class="line"><span style="color:#E06C75">  favouriteColors</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">property</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75">type</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">Boolean</span><span style="color:#ABB2BF"> })</span></span>\n<span class="line"><span style="color:#E06C75">  isAvailable</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> false</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;p>My name is </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">name</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/p></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;p>My age is </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">age</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/p></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;p>My favourite coloros are </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">favouriteColors</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">join</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">", "</span><span style="color:#ABB2BF">)</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/p></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;p>I am </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isAvailable</span><span style="color:#C678DD"> ?</span><span style="color:#98C379"> "available"</span><span style="color:#C678DD"> :</span><span style="color:#98C379"> "not available"</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/p></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/1-props/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "emit-to-parent",
    files: [
      {
        fileName: "x-app.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#98C379"> "./answer-button"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"x-app"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> XApp</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">state</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  isHappy</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> true</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  onAnswerNo</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isHappy</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> false</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  onAnswerYes</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isHappy</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> true</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;p>Are you happy?&#x3C;/p></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;answer-button</span></span>\n<span class="line"><span style="color:#98C379">        @yes=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">onAnswerYes</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">        @no=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">onAnswerNo</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">      >&#x3C;/answer-button></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;p style="font-size: 50px;"></span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isHappy</span><span style="color:#C678DD"> ?</span><span style="color:#98C379"> "😀"</span><span style="color:#C678DD"> :</span><span style="color:#98C379"> "😥"</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/p></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "answer-button.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"answer-button"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> AnswerButton</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">  clickYes</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">dispatchEvent</span><span style="color:#ABB2BF">(</span><span style="color:#C678DD">new</span><span style="color:#61AFEF"> Event</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"yes"</span><span style="color:#ABB2BF">));</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  clickNo</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">dispatchEvent</span><span style="color:#ABB2BF">(</span><span style="color:#C678DD">new</span><span style="color:#61AFEF"> Event</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"no"</span><span style="color:#ABB2BF">));</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;button @click=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">clickYes</span><span style="color:#C678DD">}</span><span style="color:#98C379">>Yes&#x3C;/button></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;button @click=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">clickNo</span><span style="color:#C678DD">}</span><span style="color:#98C379">>No&#x3C;/button></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/2-emit-to-parent/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "slot",
    files: [
      {
        fileName: "x-app.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#98C379"> "./funny-button"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"x-app"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> XApp</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;funny-button>Click me!&#x3C;/funny-button>`</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "funny-button.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">styleMap</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/directives/style-map.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"funny-button"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> FunnyButton</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;button</span></span>\n<span class="line"><span style="color:#98C379">        style=</span><span style="color:#C678DD">${</span><span style="color:#61AFEF">styleMap</span><span style="color:#ABB2BF">({</span></span>\n<span class="line"><span style="color:#E06C75">          background</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"rgba(0, 0, 0, 0.4)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          color</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"#fff"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          padding</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"10px 20px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          fontSize</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"30px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          border</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"2px solid #fff"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          margin</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"8px"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          transform</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"scale(0.9)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          boxShadow</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"4px 4px rgba(0, 0, 0, 0.4)"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          transition</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"transform 0.2s cubic-bezier(0.34, 1.65, 0.88, 0.925) 0s"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">          outline</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"0"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">        })</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">      ></span></span>\n<span class="line"><span style="color:#98C379">        &#x3C;slot>&#x3C;/slot></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;/button></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/3-slot/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "slot-fallback",
    files: [
      {
        fileName: "x-app.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#98C379"> "./funny-button"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"x-app"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> XApp</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;funny-button>&#x3C;/funny-button></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;funny-button>Click me!&#x3C;/funny-button></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "funny-button.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">css</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"funny-button"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> FunnyButton</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">  static</span><span style="color:#E06C75"> styles</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> css</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">    button {</span></span>\n<span class="line"><span style="color:#98C379">      background: rgba(0, 0, 0, 0.4);</span></span>\n<span class="line"><span style="color:#98C379">      color: #fff;</span></span>\n<span class="line"><span style="color:#98C379">      padding: 10px 20px;</span></span>\n<span class="line"><span style="color:#98C379">      fontsize: 30px;</span></span>\n<span class="line"><span style="color:#98C379">      border: 2px solid #fff;</span></span>\n<span class="line"><span style="color:#98C379">      margin: 8px;</span></span>\n<span class="line"><span style="color:#98C379">      transform: scale(0.9);</span></span>\n<span class="line"><span style="color:#98C379">      boxshadow: 4px 4px rgba(0, 0, 0, 0.4);</span></span>\n<span class="line"><span style="color:#98C379">      transition: transform 0.2s cubic-bezier(0.34, 1.65, 0.88, 0.925) 0s;</span></span>\n<span class="line"><span style="color:#98C379">      outline: 0;</span></span>\n<span class="line"><span style="color:#98C379">    }</span></span>\n<span class="line"><span style="color:#98C379">  `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;button></span></span>\n<span class="line"><span style="color:#98C379">        &#x3C;slot></span></span>\n<span class="line"><span style="color:#98C379">          &#x3C;span>No content found&#x3C;/span></span></span>\n<span class="line"><span style="color:#98C379">        &#x3C;/slot></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;/button></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/4-slot-fallback/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "context",
    files: [
      {
        fileName: "app-x.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">ContextProvider</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@lit/context"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">userContext</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "./user-context"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#98C379"> "./user-profile"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"x-app"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> XApp</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">state</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  user</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">    id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">1</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">    username</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"unicorn42"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">    email</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"unicorn42@example.com"</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">  };</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E06C75">  provider</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> new</span><span style="color:#61AFEF"> ContextProvider</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">, {</span></span>\n<span class="line"><span style="color:#E06C75">    context</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">userContext</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#E06C75">    initialValue</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">user</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  updateUsername</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic">newUsername</span><span style="color:#ABB2BF">) {</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">user</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> { ...</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">user</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">username</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">newUsername</span><span style="color:#ABB2BF"> };</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">provider</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">setValue</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">user</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">` &#x3C;h1>Welcome back, </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">username</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/h1></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;user-profile</span></span>\n<span class="line"><span style="color:#98C379">        .user="</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">user</span><span style="color:#C678DD">}</span><span style="color:#98C379">"</span></span>\n<span class="line"><span style="color:#98C379">        .updateUsername=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">updateUsername</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">bind</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">)</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">      >&#x3C;/user-profile>`</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "user-context.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">createContext</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@lit/context"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> const</span><span style="color:#E5C07B"> userContext</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> createContext</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"user"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "user-profile.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">property</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">consume</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@lit/context"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">userContext</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "./user-context"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"user-profile"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> UserProfile</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">consume</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75">context</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">userContext</span><span style="color:#ABB2BF"> })</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">property</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75">type</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">Object</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">attribute</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">false</span><span style="color:#ABB2BF"> })</span></span>\n<span class="line"><span style="color:#E06C75">  user</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">property</span><span style="color:#ABB2BF">({ </span><span style="color:#E06C75">type</span><span style="color:#ABB2BF">: </span><span style="color:#E06C75">Function</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">attribute</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">false</span><span style="color:#ABB2BF"> })</span></span>\n<span class="line"><span style="color:#E06C75">  updateUsername</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  handleUpdateUsername</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">updateUsername</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"Jane"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;div></span></span>\n<span class="line"><span style="color:#98C379">        &#x3C;h2>My Profile&#x3C;/h2></span></span>\n<span class="line"><span style="color:#98C379">        &#x3C;p>Username: </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">username</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/p></span></span>\n<span class="line"><span style="color:#98C379">        &#x3C;p>Email: </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">email</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/p></span></span>\n<span class="line"><span style="color:#98C379">        &#x3C;button @click="</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">handleUpdateUsername</span><span style="color:#C678DD">}</span><span style="color:#98C379">"></span></span>\n<span class="line"><span style="color:#98C379">          Update username to Jane</span></span>\n<span class="line"><span style="color:#98C379">        &#x3C;/button></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;/div></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/4-component-composition/5-context/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "input-text",
    files: [
      {
        fileName: "input-hello.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"input-hello"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> InputHello</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">state</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  text</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> "Hello World"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  handleInput</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic">event</span><span style="color:#ABB2BF">) {</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">text</span><span style="color:#56B6C2"> =</span><span style="color:#E5C07B"> event</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">target</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;p></span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">text</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/p></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;input value=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">text</span><span style="color:#C678DD">}</span><span style="color:#98C379"> @input=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">handleInput</span><span style="color:#C678DD">}</span><span style="color:#98C379"> /></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/1-input-text/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "checkbox",
    files: [
      {
        fileName: "is-available.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"is-available"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> IsAvailable</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">state</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  isAvailable</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> false</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  handleChange</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isAvailable</span><span style="color:#56B6C2"> =</span><span style="color:#56B6C2"> !</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isAvailable</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;input</span></span>\n<span class="line"><span style="color:#98C379">        id="is-available"</span></span>\n<span class="line"><span style="color:#98C379">        type="checkbox"</span></span>\n<span class="line"><span style="color:#98C379">        ?checked=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isAvailable</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">        @change=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">handleChange</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">      /></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;label for="is-available">Is available&#x3C;/label></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/2-checkbox/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "radio",
    files: [
      {
        fileName: "pick-pill.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"pick-pill"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> PickPill</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">state</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  picked</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> "red"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  handleChange</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic">event</span><span style="color:#ABB2BF">) {</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">picked</span><span style="color:#56B6C2"> =</span><span style="color:#E5C07B"> event</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">target</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;div>Picked: </span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">picked</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/div></span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#98C379">      &#x3C;input</span></span>\n<span class="line"><span style="color:#98C379">        id="blue-pill"</span></span>\n<span class="line"><span style="color:#98C379">        name="pill"</span></span>\n<span class="line"><span style="color:#98C379">        ?checked=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">picked</span><span style="color:#56B6C2"> ===</span><span style="color:#98C379"> "blue"</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">        type="radio"</span></span>\n<span class="line"><span style="color:#98C379">        value="blue"</span></span>\n<span class="line"><span style="color:#98C379">        @change=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">handleChange</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">      /></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;label for="blue-pill">Blue pill&#x3C;/label></span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#98C379">      &#x3C;input</span></span>\n<span class="line"><span style="color:#98C379">        id="red-pill"</span></span>\n<span class="line"><span style="color:#98C379">        name="pill"</span></span>\n<span class="line"><span style="color:#98C379">        ?checked=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">picked</span><span style="color:#56B6C2"> ===</span><span style="color:#98C379"> "red"</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">        type="radio"</span></span>\n<span class="line"><span style="color:#98C379">        value="red"</span></span>\n<span class="line"><span style="color:#98C379">        @change=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">handleChange</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">      /></span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;label for="red-pill">Red pill&#x3C;/label></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/3-radio/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "select",
    files: [
      {
        fileName: "color-select.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">state</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">repeat</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/directives/repeat"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"color-select"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> ColorSelect</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">  colors</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [</span></span>\n<span class="line"><span style="color:#ABB2BF">    { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">1</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"red"</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">    { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">2</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"blue"</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">    { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">3</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"green"</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">    { </span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">4</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">text</span><span style="color:#ABB2BF">: </span><span style="color:#98C379">"gray"</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">isDisabled</span><span style="color:#ABB2BF">: </span><span style="color:#D19A66">true</span><span style="color:#ABB2BF"> },</span></span>\n<span class="line"><span style="color:#ABB2BF">  ];</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">  @</span><span style="color:#61AFEF">state</span><span style="color:#ABB2BF">()</span></span>\n<span class="line"><span style="color:#E06C75">  selectedColorId</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> 2</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  handleChange</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic">event</span><span style="color:#ABB2BF">) {</span></span>\n<span class="line"><span style="color:#E5C07B">    this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">selectedColorId</span><span style="color:#56B6C2"> =</span><span style="color:#E5C07B"> event</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">target</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">value</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;select @change=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">handleChange</span><span style="color:#C678DD">}</span><span style="color:#98C379">></span></span>\n<span class="line"><span style="color:#C678DD">        ${</span><span style="color:#61AFEF">repeat</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#E5C07B">          this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">colors</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">          (</span><span style="color:#E06C75;font-style:italic">color</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#E5C07B"> color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">id</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">          (</span><span style="color:#E06C75;font-style:italic">color</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span></span>\n<span class="line"><span style="color:#61AFEF">            html</span><span style="color:#98C379">`&#x3C;option</span></span>\n<span class="line"><span style="color:#98C379">              value=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">id</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">              ?selected=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">selectedColorId</span><span style="color:#56B6C2"> ===</span><span style="color:#E5C07B"> color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">id</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">              ?disabled=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">isDisabled</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">            ></span></span>\n<span class="line"><span style="color:#C678DD">              ${</span><span style="color:#E5C07B">color</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">text</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">            &#x3C;/option>`</span></span>\n<span class="line"><span style="color:#ABB2BF">        )</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">      &#x3C;/select></span></span>\n<span class="line"><span style="color:#98C379">    `</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/6-form-input/4-select/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "render-app",
    files: [
      {
        fileName: "index.html",
        ext: "html",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#ABB2BF">&#x3C;!</span><span style="color:#E06C75">doctype</span><span style="color:#D19A66"> html</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">&#x3C;</span><span style="color:#E06C75">html</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  &#x3C;</span><span style="color:#E06C75">head</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">script</span><span style="color:#D19A66"> type</span><span style="color:#ABB2BF">=</span><span style="color:#98C379">"module"</span><span style="color:#D19A66"> src</span><span style="color:#ABB2BF">=</span><span style="color:#98C379">"./app.js"</span><span style="color:#ABB2BF">>&#x3C;/</span><span style="color:#E06C75">script</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">  &#x3C;/</span><span style="color:#E06C75">head</span><span style="color:#ABB2BF">></span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">  &#x3C;</span><span style="color:#E06C75">body</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">    &#x3C;</span><span style="color:#E06C75">x-app</span><span style="color:#ABB2BF"> /></span></span>\n<span class="line"><span style="color:#ABB2BF">  &#x3C;/</span><span style="color:#E06C75">body</span><span style="color:#ABB2BF">></span></span>\n<span class="line"><span style="color:#ABB2BF">&#x3C;/</span><span style="color:#E06C75">html</span><span style="color:#ABB2BF">></span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "app.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"x-app"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> XApp</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;h1>Hello world&#x3C;/h1>`</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/7-webapp-features/1-render-app/lit",
  },
  {
    frameworkId: "lit",
    snippetId: "fetch-data",
    files: [
      {
        fileName: "x-app.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">LitElement</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">html</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">customElement</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "lit/decorators.js"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">createFetchUsersTask</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "./fetch-users-task"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#ABB2BF">@</span><span style="color:#61AFEF">customElement</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"x-app"</span><span style="color:#ABB2BF">)</span></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> class</span><span style="color:#E5C07B"> XApp</span><span style="color:#C678DD"> extends</span><span style="color:#E5C07B"> LitElement</span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#E06C75">  fetchUsers</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> createFetchUsersTask</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">this</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#61AFEF">  render</span><span style="color:#ABB2BF">() {</span></span>\n<span class="line"><span style="color:#C678DD">    return</span><span style="color:#E5C07B"> this</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">fetchUsers</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">render</span><span style="color:#ABB2BF">({</span></span>\n<span class="line"><span style="color:#61AFEF">      pending</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;p>Fetching users...&#x3C;/p>`</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">      error</span><span style="color:#ABB2BF">: (</span><span style="color:#E06C75;font-style:italic">e</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`&#x3C;p>An error occurred while fetching users&#x3C;/p>`</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#61AFEF">      complete</span><span style="color:#ABB2BF">: (</span><span style="color:#E06C75;font-style:italic">data</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">        &#x3C;ul></span></span>\n<span class="line"><span style="color:#C678DD">          ${</span><span style="color:#E5C07B">data</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">map</span><span style="color:#ABB2BF">(</span></span>\n<span class="line"><span style="color:#ABB2BF">            (</span><span style="color:#E06C75;font-style:italic">user</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#61AFEF"> html</span><span style="color:#98C379">`</span></span>\n<span class="line"><span style="color:#98C379">              &#x3C;li></span></span>\n<span class="line"><span style="color:#98C379">                &#x3C;img src=</span><span style="color:#C678DD">${</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">picture</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">thumbnail</span><span style="color:#C678DD">}</span><span style="color:#98C379"> alt="user" /></span></span>\n<span class="line"><span style="color:#98C379">                &#x3C;p></span><span style="color:#C678DD">${</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">name</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">first</span><span style="color:#C678DD">}</span><span style="color:#C678DD"> ${</span><span style="color:#E5C07B">user</span><span style="color:#ABB2BF">.</span><span style="color:#E5C07B">name</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">last</span><span style="color:#C678DD">}</span><span style="color:#98C379">&#x3C;/p></span></span>\n<span class="line"><span style="color:#98C379">              &#x3C;/li></span></span>\n<span class="line"><span style="color:#98C379">            `</span></span>\n<span class="line"><span style="color:#ABB2BF">          )</span><span style="color:#C678DD">}</span></span>\n<span class="line"><span style="color:#98C379">        &#x3C;/ul></span></span>\n<span class="line"><span style="color:#98C379">      `</span><span style="color:#ABB2BF">,</span></span>\n<span class="line"><span style="color:#ABB2BF">    });</span></span>\n<span class="line"><span style="color:#ABB2BF">  }</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
      {
        fileName: "fetch-users-task.js",
        ext: "js",
        contentHtml:
          '<pre class="shiki one-dark-pro-for-component-party" style="background-color:#0D1117;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">Task</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> "@lit/task"</span><span style="color:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> function</span><span style="color:#61AFEF"> createFetchUsersTask</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75;font-style:italic">element</span><span style="color:#ABB2BF">) {</span></span>\n<span class="line"><span style="color:#C678DD">  return</span><span style="color:#C678DD"> new</span><span style="color:#61AFEF"> Task</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">element</span><span style="color:#ABB2BF">, {</span></span>\n<span class="line"><span style="color:#61AFEF">    task</span><span style="color:#ABB2BF">: </span><span style="color:#C678DD">async</span><span style="color:#ABB2BF"> () </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>\n<span class="line"><span style="color:#C678DD">      const</span><span style="color:#E5C07B"> response</span><span style="color:#56B6C2"> =</span><span style="color:#C678DD"> await</span><span style="color:#61AFEF"> fetch</span><span style="color:#ABB2BF">(</span><span style="color:#98C379">"https://randomuser.me/api/?results=3"</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#C678DD">      if</span><span style="color:#ABB2BF"> (</span><span style="color:#56B6C2">!</span><span style="color:#E5C07B">response</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">ok</span><span style="color:#ABB2BF">) {</span></span>\n<span class="line"><span style="color:#C678DD">        throw</span><span style="color:#C678DD"> new</span><span style="color:#61AFEF"> Error</span><span style="color:#ABB2BF">(</span><span style="color:#E5C07B">response</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">status</span><span style="color:#ABB2BF">);</span></span>\n<span class="line"><span style="color:#ABB2BF">      }</span></span>\n<span class="line"><span style="color:#C678DD">      return</span><span style="color:#E5C07B"> response</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">json</span><span style="color:#ABB2BF">();</span></span>\n<span class="line"><span style="color:#ABB2BF">    },</span></span>\n<span class="line"><span style="color:#61AFEF">    args</span><span style="color:#ABB2BF">: () </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> [],</span></span>\n<span class="line"><span style="color:#ABB2BF">  });</span></span>\n<span class="line"><span style="color:#ABB2BF">}</span></span>\n<span class="line"></span></code></pre>',
      },
    ],
    playgroundURL: "",
    markdownFiles: [],
    snippetEditHref:
      "https://github.com/matschik/component-party/tree/main/content/7-webapp-features/2-fetch-data/lit",
  },
];
